{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'ConfItem',\n  props: ['name', 'deadline', 'location'],\n\n  data() {\n    return {\n      DD: 0,\n      HH: 0,\n      MM: 0,\n      SS: 0\n    };\n  },\n\n  mounted() {\n    var countDownDate = new Date(this.deadline).getTime();\n    this.countdown(countDownDate);\n    setInterval(this.countdown(countDownDate), 1000);\n  },\n\n  methods: {\n    countdown: function (date) {\n      var now = new Date().getTime();\n      var distance = date - now;\n      console.log(distance);\n      this.DD = Math.floor(distance / (1000 * 60 * 60 * 24));\n      this.HH = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      this.MM = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      this.SS = Math.floor(distance % (1000 * 60) / 1000);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAoBA;EACAA,gBADA;EAEAC,uCAFA;;EAGAC;IACA;MACAC,KADA;MAEAC,KAFA;MAGAC,KAHA;MAIAC;IAJA;EAMA,CAVA;;EAWAC;IACA;IACA;IACAC;EACA,CAfA;;EAgBAC;IACAC;MAEA;MACA;MACAC;MACA;MACA;MACA;MACA;IACA;EAVA;AAhBA","names":["name","props","data","DD","HH","MM","SS","mounted","setInterval","methods","countdown","console"],"sourceRoot":"src/components","sources":["ConfItem.vue"],"sourcesContent":["<template>\n    <div class=\"conf\">\n        <div id=\"item-content\">\n            <div id=\"item-col\">\n                <h2>{{ name }}</h2> \n                <p>Location: {{ location }}</p>\n            </div>\n\n            <div id=\"item-col\">\n                <h2>{{DD}} days {{HH}}h {{MM}}m {{SS}}s</h2>\n                <p>Deadline: {{ deadline }}</p>\n            </div>\n        </div>\n        \n        <div class=\"ui divider\"></div>\n    </div>\n</template>\n\n\n<script>\nexport default {\n    name: 'ConfItem',\n    props: ['name', 'deadline', 'location'],\n    data() {\n        return {\n            DD: 0,\n            HH: 0,\n            MM: 0,\n            SS: 0\n        }\n    },\n    mounted() {\n        var countDownDate = new Date(this.deadline).getTime()\n        this.countdown(countDownDate)\n        setInterval( this.countdown(countDownDate), 1000)\n    },\n    methods: {\n        countdown: function(date){\n            \n            var now = new Date().getTime();\n            var distance = date - now;\n            console.log(distance)\n            this.DD = Math.floor(distance / (1000 * 60 * 60 * 24));\n            this.HH = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            this.MM = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            this.SS = Math.floor((distance % (1000 * 60)) / 1000);\n        }\n    }\n}\n</script>\n\n\n<style scoped>\n.conf {\n    padding-top: 20px;\n}\n\n#item-col {\n    float: left;\n    width: 50%;\n}\n\n#item-content:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}